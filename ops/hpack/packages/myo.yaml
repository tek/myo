name: myo
synopsis: Neovim Layout and Command Manager
<<: !include shared/meta.yaml
defaults:
  local: shared/defaults.yaml

extra-source-files:
  - readme.md
  - changelog.md

dependencies:
  - attoparsec
  - conduit-extra
  - hashable
  - hourglass
  - mono-traversable
  - network
  - parsers
  - raw-strings-qq
  - regex-with-pcre
  - stm-chans
  - stm-conduit
  - string-interpolate
  - stringsearch
  - transformers-base
  - uuid
  - vector

library:
  source-dirs: lib
  other-modules: Prelude
  generated-other-modules: Paths_myo

default-extensions:
  - AllowAmbiguousTypes
  - ApplicativeDo
  - BangPatterns
  - BinaryLiterals
  - BlockArguments
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveAnyClass
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DerivingStrategies
  - DisambiguateRecordFields
  - DoAndIfThenElse
  - DuplicateRecordFields
  - EmptyDataDecls
  - ExistentialQuantification
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - LiberalTypeSynonyms
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - OverloadedStrings
  - PackageImports
  - PartialTypeSignatures
  - PatternGuards
  - PatternSynonyms
  - PolyKinds
  - QuantifiedConstraints
  - QuasiQuotes
  - RankNTypes
  - RecordWildCards
  - RecursiveDo
  - ScopedTypeVariables
  - StandaloneDeriving
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeFamilyDependencies
  - TypeOperators
  - TypeSynonymInstances
  - UndecidableInstances
  - UnicodeSyntax
  - ViewPatterns

executables:
 myo:
  main: Main.hs
  source-dirs: app
  ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
  dependencies:
    - name: myo
      mixin:
        - hiding (Myo.Prelude)
        - (Myo.Prelude as Prelude)
